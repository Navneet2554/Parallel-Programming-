{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Odd_even sort\
#include <stdio.h>\
#include <omp.h>\
\
void odd_even_sort(int arr[], int n) \{\
  for (int i = 0; i < n - 1; i++) \{\
    if (i % 2 == 0) \{\
      // Even phase\
      #pragma omp parallel for num_threads(n/2)\
      for (int j = 0; j < n - 2; j += 2) \{\
        if (arr[j] > arr[j + 1]) \{\
          int temp = arr[j];\
          arr[j] = arr[j + 1];\
          arr[j + 1] = temp;\
        \}\
      \}\
    \} else \{\
      // Odd phase\
      #pragma omp parallel for num_threads(n/2)\
      for (int j = 1; j < n - 1; j += 2) \{\
        if (arr[j] > arr[j + 1]) \{\
          int temp = arr[j];\
          arr[j] = arr[j + 1];\
          arr[j + 1] = temp;\
        \}\
      \}\
    \}\
  \}\
\}\
\
int main() \{\
  int arr[] = \{6, 5, 3, 1, 8, 7, 2, 4\};\
  int n = sizeof(arr) / sizeof(arr[0]);\
\
  printf("Unsorted array: \\n");\
  for (int i = 0; i < n; ++i)\
    printf("%d ", arr[i]);\
\
  odd_even_sort(arr, n);\
\
  printf("\\nSorted array: \\n");\
  for (int i = 0; i < n; ++i)\
    printf("%d ", arr[i]);\
\
  return 0;\
\}\
#include <stdio.h>\
#include <omp.h>\
\
void odd_even_sort(int arr[], int n) \{\
  for (int i = 0; i < n - 1; i++) \{\
    if (i % 2 == 0) \{\
      // Even phase\
      #pragma omp parallel for num_threads(n/2)\
      for (int j = 0; j < n - 2; j += 2) \{\
        if (arr[j] > arr[j + 1]) \{\
          int temp = arr[j];\
          arr[j] = arr[j + 1];\
          arr[j + 1] = temp;\
        \}\
      \}\
    \} else \{\
      // Odd phase\
      #pragma omp parallel for num_threads(n/2)\
      for (int j = 1; j < n - 1; j += 2) \{\
        if (arr[j] > arr[j + 1]) \{\
          int temp = arr[j];\
          arr[j] = arr[j + 1];\
          arr[j + 1] = temp;\
        \}\
      \}\
    \}\
  \}\
\}\
\
int main() \{\
  int arr[] = \{6, 5, 3, 1, 8, 7, 2, 4\};\
  int n = sizeof(arr) / sizeof(arr[0]);\
\
  printf("Unsorted array: \\n");\
  for (int i = 0; i < n; ++i)\
    printf("%d ", arr[i]);\
\
  odd_even_sort(arr, n);\
\
  printf("\\nSorted array: \\n");\
  for (int i = 0; i < n; ++i)\
    printf("%d ", arr[i]);\
\
  return 0;\
\}}